@use 'sass:math';

@import 'styles/mixins';
@import 'styles/placeholders';
@import 'styles/variables';

$modal-animation-offset: 50px;
$modal-icon-size: 22px;
$modal-outer-width-desktop-up: 740px;
$modal-left-right-width-mobile: 100%;
$modal-left-right-width-tablet-up: 45%;
$modal-left-right-width-desktop-up: 350px;
$modal-mask-opacity: 0.5;

// Mixins
// @mixin Render a modal to slide in from the left-side of the screen
@mixin layout-left() {
  .outer {
    left: -$modal-left-right-width-mobile;
    right: initial;

    @include breakpoint($tablet-up) {
      left: -$modal-left-right-width-tablet-up;
      right: initial;
    }
  }

  &.visible .outer {
    left: 0;
    right: initial;
  }
}

// @mixin Render a modal to slide in from the right-side of the screen
@mixin layout-right() {
  .outer {
    left: initial;
    right: -$modal-left-right-width-mobile;

    @include breakpoint($tablet-up) {
      left: initial;
      right: -$modal-left-right-width-tablet-up;
    }
  }

  &.visible .outer {
    left: initial;
    right: 0;
  }
}

.modal {
  @extend %border-box;
  align-items: center;
  display: flex;
  height: 100vh;
  left: 0;
  overflow: hidden;
  position: fixed;
  top: 0;
  transition: background $transition-fast ease-in-out;
  width: 100vw;
  z-index: -1;

  @include breakpoint($tablet-up) {
    height: 100vh;
  }

  &.visible {
    background: rgba($gray, $modal-mask-opacity);

    .outer {
      opacity: 1;
    }
  }

  &.embedded {
    height: 100%;
    position: absolute;
    width: 100%;

    .outer {
      position: relative;
    }
  }

  &.position-bottom {
    align-items: flex-end;

    .outer {
      max-height: 100%;
      top: 100%;
      width: 100%;
    }

    &.visible .outer {
      top: 0;
    }
  }

  &.position-centre {
    .outer {
      justify-content: space-between;
      margin-top: -$modal-animation-offset;
      max-height: 100%;
      width: 100%;

      @include breakpoint($desktop-up) {
        @include box-shadow(0, 0, $shadow-m, $gray-80);
        max-height: 75%;
        left: 50%;
        transform: translateX(-50%);
        width: $modal-outer-width-desktop-up;
      }
    }

    &.visible .outer {
      margin-top: 0;
    }
  }

  &.position-left .outer,
  &.position-right .outer {
    height: 100%;
    max-height: 100%;
    top: 0;
    width: $modal-left-right-width-mobile;

    @include breakpoint($tablet-up) {
      width: $modal-left-right-width-tablet-up;
    }

    @include breakpoint($desktop-up) {
      width: $modal-left-right-width-desktop-up;
    }
  }

  &.position-left {
    @include layout-left();
  }

  &.position-right {
    justify-content: flex-end;

    @include layout-right();
  }

  [data-component-id] {
    margin-bottom: $spacing-xxl;
  }

  [data-component-id='button'],
  [data-component-id='chevron-link'] {
    margin-bottom: $spacing-m;
  }

  // Ensure the layering remains WHILST animating in AND out
  &[data-animating-out] {
    z-index: 3;
  }

  &[data-animating-in],
  &[data-visible] {
    z-index: 3;
  }

  [data-component-id='header-bar'] {
    margin-bottom: 0;
    padding-bottom: $spacing-xs;

    h5 {
      @include font('body-1');
    }
  }

  [data-icon-id='close'] {
    height: $modal-icon-size;
    position: absolute;
    right: $spacing-xs;
    top: $spacing-xs;
    width: $modal-icon-size;
  }
}

.outer {
  background: $base;
  box-shadow: 0 0 $shadow-xxl rgba($gray, 1);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  max-height: calc(100% - #{$spacing-m * 2});
  opacity: 0;
  position: relative;
  transition: left $transition-fast ease-in-out, margin $transition-fast ease-in-out,
    opacity $transition-fast ease-in-out, right $transition-fast ease-in-out, top $transition-fast ease-in-out;
}

.content {
  @extend %border-box;
  flex: 1;
  overflow-y: auto;
  padding: $spacing-xs;
}

.footer {
  @extend %border-box;
  padding: $spacing-xs;
}

// Debug colours
.footer {
  background: $purple-10;
}

// Right-to-left layout
@include rtl() {
  .modal {
    &.position-centre {
      .outer {
        @include breakpoint($desktop-up) {
          left: initial;
          right: 50%;
          transform: translateX(50%);
        }
      }
    }

    &.position-left {
      @include layout-right();
    }

    &.position-right {
      @include layout-left();
    }

    [data-icon-id='close'] {
      left: $spacing-xs;
      right: initial;
    }
  }
}
