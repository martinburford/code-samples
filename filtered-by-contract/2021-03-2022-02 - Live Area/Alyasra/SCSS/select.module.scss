@import 'styles/functions';
@import 'styles/mixins';
@import 'styles/placeholders';
@import 'styles/variables';

$select-border-width: $border-xs;
$select-icon-size: 16px;
$select-multirow-item-height: 37px;

.select {
  align-items: center;
  background-color: $white;
  border-style: solid;
  border-width: $select-border-width;
  display: grid;
  grid-template-areas: 'select';
  position: relative;

  *,
  *:before,
  *:after {
    @extend %border-box;
    color: $gray-90;
    cursor: pointer;
  }

  select,
  [data-component-id='icon'] {
    grid-area: select;
  }

  // Generate support for colour variants
  @each $colourName, $colourHex in $coloursMap {
    &.#{$colourName} {
      border-color: rgba($colourHex, 0.2);

      // Single select
      &[data-is-single='true'] {
        [data-component-id='icon'] {
          svg {
            fill: $colourHex;

            path,
            use {
              fill: $colourHex;
            }
          }
        }
      }

      select[multiple] {
        // Styling of selected options
        // This is not fully supported cross-browser
        &:not(:disabled) option:checked {
          @include linear-gradient(
            to bottom,
            rgba-to-rgb(rgba($colourHex, 0.1)) 0%,
            rgba-to-rgb(rgba($colourHex, 0.15)) 100%
          );
        }
      }

      // Interim solution until :focus-within has better support
      .select-list:focus ~ .focus {
        border-color: $colourHex;
      }
    }
  }

  // Disabled
  &[data-is-disabled='true'] {
    * {
      cursor: not-allowed;
    }

    background-color: $gray-10;
    border-color: $gray-10;
    cursor: not-allowed;

    .select-list {
      color: $gray-50;

      option {
        color: $gray-50;
      }
    }

    &[data-is-single='true'] {
      [data-component-id='icon'] {
        svg {
          fill: $gray-50;

          path,
          use {
            fill: $gray-50;
          }
        }
      }
    }
  }

  // Single select
  &[data-is-single='true'] {
    [data-component-id='icon'] {
      content: '';
      height: $select-icon-size;
      margin-right: $spacing-xs;
      justify-self: end;
      transform: rotate(90deg);
      width: $select-icon-size;
    }
  }

  // Multi-select
  &[data-is-multiple='true'] {
    [data-component-id='icon'] {
      display: none;
    }

    @include hover() {
      .select-list {
        padding: 0;
      }
    }
  }

  [data-component-id='icon'] {
    margin-bottom: 0;
  }

  select[multiple] {
    max-height: calc(
      #{$select-multirow-item-height} * 6
    ); // Allow the multi-select to show upto 6x items in view at one time
    padding-right: 0;

    option {
      padding: $spacing-xs;
      white-space: normal; // This forces items to remain on a single line
    }
  }
}

.label {
  display: inline-block;
  margin-bottom: $spacing-xxs;
}

.select-list {
  appearance: none;
  background-color: transparent;
  border: none;
  outline: none;
  padding: $spacing-xs;
  z-index: 1; // Ensure the arrow remains clickable and acts as a trigger for showing / hiding the available options of the list

  // Remove the dropdown arrow for Internet Explorer 10 / 11
  &::-ms-expand {
    display: none;
  }

  // Interim solution until :focus-within has better support
  &:focus ~ .focus {
    border-width: $select-border-width;
    border-style: solid;
    bottom: -$select-border-width;
    left: -$select-border-width;
    position: absolute;
    right: -$select-border-width;
    top: -$select-border-width;
  }
}

// Right-to-left layout
@include rtl() {
  .select {
    &[data-is-single='true'] {
      [data-component-id='icon'] {
        margin-left: $spacing-xs;
        margin-right: initial;
      }
    }
  }
}
